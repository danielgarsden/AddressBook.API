// <auto-generated />
using AddressBook.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AddressBook.API.Migrations
{
    [DbContext(typeof(AddressBookContext))]
    [Migration("20210226141014_AddedCountyField")]
    partial class AddedCountyField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AddressBook.API.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("County")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LandLineNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AddressId");

                    b.ToTable("AddressBooks");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "13 Pinnacle Drive",
                            AddressLine2 = "Egerton",
                            AddressLine3 = "Bla",
                            City = "Bolton",
                            FirstName = "Daniel",
                            LandLineNumber = "01204123456",
                            LastName = "Garsden",
                            MobileNumber = "07123456789",
                            PostCode = "BL7 9XD"
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine1 = "13 Pinnacle Drive",
                            AddressLine2 = "Egerton",
                            AddressLine3 = "Bla",
                            City = "Bolton",
                            FirstName = "Zita",
                            LandLineNumber = "01204123456",
                            LastName = "Garsden",
                            MobileNumber = "07123456789",
                            PostCode = "BL7 9XD"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
